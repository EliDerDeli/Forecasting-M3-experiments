fin_fit[[2]]
fin_fit[[1]][1]
fin_fit[[1]][1][1]
fin_fit[[1]][2]
fin_fit[[1]][2,1]
o<- fin_fit[[1]]
o[1]
o[[1]]
fin_fit[[[1]]]
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,5))
colnames(arr_all_hyb) <- c("hybrid_Avg_err", "MAPA_Avg_err","chosen", "MAPE","type")
count = 1
arr_ids <- c(702) #TEST DELETE
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,5] <- M3[[nameId]]$type
#hybrid
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aez"), h = h)}
e_ets_x <- tsCV(y_training, farHY, initial = (length(y_training)-2*h))
mse_X <- sqrt(mean(e_ets_x^2, na.rm=TRUE))
arr_all_hyb[count,1] <- mse_X
#mapa
fmapa <- function(y, h = 8) {
result <- mapa(y, fh = h, conf.lvl = c(0.8, 0.95))
list(mean = result$outfor)
}
#-----------------------------------------
e_MAPA <- tsCV(y_training, fmapa, initial = (length(y_training)-2*h))
mse_y <- sqrt(mean(e_MAPA^2, na.rm=TRUE))
arr_all_hyb[count,2] <- mse_y
if ((mse_Y < mse_X) == TRUE) {
fin_fit <- fmapa(y_training)
arr_all_hyb[count,3] <- "mapa"
} else {
fin_fit <- farHY(y_training, h)
arr_all_hyb[count,3] <- "hybrid"
}
arryFc <- y_test
message(length(arryFc))
message(length(fin_fit))
for (xa in 1:length(arryFc)) {
o<- fin_fit[[1]]
arryFc[[xa]] <- o[[xa]]
}
#acc_fin <- accuracy(arryFc, y_test)
#arr_all_hyb[count,4] <- acc_fin[5]
count <- count + 1
}
arryFc
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,5))
colnames(arr_all_hyb) <- c("hybrid_Avg_err", "MAPA_Avg_err","chosen", "MAPE","type")
count = 1
arr_ids <- c(702) #TEST DELETE
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,5] <- M3[[nameId]]$type
#hybrid
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aez"), h = h)}
e_ets_x <- tsCV(y_training, farHY, initial = (length(y_training)-2*h))
mse_X <- sqrt(mean(e_ets_x^2, na.rm=TRUE))
arr_all_hyb[count,1] <- mse_X
#mapa
fmapa <- function(y, h = 8) {
result <- mapa(y, fh = h, conf.lvl = c(0.8, 0.95))
list(mean = result$outfor)
}
#-----------------------------------------
e_MAPA <- tsCV(y_training, fmapa, initial = (length(y_training)-2*h))
mse_y <- sqrt(mean(e_MAPA^2, na.rm=TRUE))
arr_all_hyb[count,2] <- mse_y
if ((mse_Y < mse_X) == TRUE) {
fin_fit <- fmapa(y_training)
arr_all_hyb[count,3] <- "mapa"
} else {
fin_fit <- farHY(y_training, h)
arr_all_hyb[count,3] <- "hybrid"
}
arryFc <- y_test
message(length(arryFc))
message(length(fin_fit))
for (xa in 1:length(arryFc)) {
o<- fin_fit[[1]]
arryFc[[xa]] <- o[[xa]]
}
acc_fin <- accuracy(arryFc, y_test)
arr_all_hyb[count,4] <- acc_fin[5]
count <- count + 1
}
arr_all_hyb
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,5))
colnames(arr_all_hyb) <- c("hybrid_Avg_err", "MAPA_Avg_err","chosen", "MAPE","type")
count = 1
arr_ids <- c(702, 712) #TEST DELETE
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,5] <- M3[[nameId]]$type
#hybrid
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aez"), h = h)}
e_ets_x <- tsCV(y_training, farHY, initial = (length(y_training)-2*h))
mse_X <- sqrt(mean(e_ets_x^2, na.rm=TRUE))
arr_all_hyb[count,1] <- mse_X
#mapa
fmapa <- function(y, h = 8) {
result <- mapa(y, fh = h, conf.lvl = c(0.8, 0.95))
list(mean = result$outfor)
}
#-----------------------------------------
e_MAPA <- tsCV(y_training, fmapa, initial = (length(y_training)-2*h))
mse_y <- sqrt(mean(e_MAPA^2, na.rm=TRUE))
arr_all_hyb[count,2] <- mse_y
if ((mse_Y < mse_X) == TRUE) {
fin_fit <- fmapa(y_training)
arr_all_hyb[count,3] <- "mapa"
} else {
fin_fit <- farHY(y_training, h)
arr_all_hyb[count,3] <- "hybrid"
}
arryFc <- y_test
message(length(arryFc))
message(length(fin_fit))
for (xa in 1:length(arryFc)) {
o<- fin_fit[[1]]
arryFc[[xa]] <- o[[xa]]
}
acc_fin <- accuracy(arryFc, y_test)
arr_all_hyb[count,4] <- acc_fin[5]
count <- count + 1
}
arr_all_hyb
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,5))
colnames(arr_all_hyb) <- c("hybrid_Avg_err", "MAPA_Avg_err","chosen", "MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,5] <- M3[[nameId]]$type
#hybrid
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aez"), h = h)}
e_ets_x <- tsCV(y_training, farHY, initial = (length(y_training)-2*h))
mse_X <- sqrt(mean(e_ets_x^2, na.rm=TRUE))
arr_all_hyb[count,1] <- mse_X
#mapa
fmapa <- function(y, h = 8) {
result <- mapa(y, fh = h, conf.lvl = c(0.8, 0.95))
list(mean = result$outfor)
}
#-----------------------------------------
e_MAPA <- tsCV(y_training, fmapa, initial = (length(y_training)-2*h))
mse_y <- sqrt(mean(e_MAPA^2, na.rm=TRUE))
arr_all_hyb[count,2] <- mse_y
if ((mse_Y < mse_X) == TRUE) {
fin_fit <- fmapa(y_training)
arr_all_hyb[count,3] <- "mapa"
} else {
fin_fit <- farHY(y_training, h)
arr_all_hyb[count,3] <- "hybrid"
}
arryFc <- y_test
message(length(arryFc))
message(length(fin_fit))
for (xa in 1:length(arryFc)) {
o<- fin_fit[[1]]
arryFc[[xa]] <- o[[xa]]
}
acc_fin <- accuracy(arryFc, y_test)
arr_all_hyb[count,4] <- acc_fin[5]
count <- count + 1
message("one finished")
}
arr_all_hyb
library(writexl)
write_xlsx(arr_all_hyb,"C:\\Users\\elias\\Desktop\\tabsx2ddddd.xlsx")
arr_all_hyb %>% as_tibble() %>% write_xlsx("C:\\Users\\elias\\Desktop\\tabsx2ddddd.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,5))
colnames(arr_all_hyb) <- c("hybrid_Avg_err", "MAPA_Avg_err","chosen", "MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,5] <- M3[[nameId]]$type
#hybrid
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aez"), h = h)}
e_ets_x <- tsCV(y_training, farHY, initial = (length(y_training)-2*h))
mse_X <- sqrt(mean(e_ets_x^2, na.rm=TRUE))
arr_all_hyb[count,1] <- mse_X
arryFc <- y_test
message(length(arryFc))
message(length(fin_fit))
for (xa in 1:length(arryFc)) {
o<- fin_fit[[1]]
arryFc[[xa]] <- o[[xa]]
}
acc_fin <- accuracy(arryFc, y_test)
arr_all_hyb[count,4] <- acc_fin[5]
count <- count + 1
message("one finished")
}
plot(pressure)
arr_all_hyb %>% as_tibble %>% write_xlsx(arr_tsb,"C:\\Users\\elias\\Desktop\\tabsxddd.xlsx")
arr_all_hyb %>% as_tibble %>% write_xlsx("C:\\Users\\elias\\Desktop\\tabsxddd.xlsx")
?hybridModel
farHY <- function(x, h){forecast(forecastHybrid::hybridModel(y_training, models= "aezf"), h = h)}
farHY
farHY(y_training,8)
x <- farHY()
farHY <- forecast(forecastHybrid::hybridModel(y_training, models= "aezf"), h = 8)
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,2))
colnames(arr_all_hyb) <- c("hybrid_MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,2] <- M3[[nameId]]$type
#hybrid
farHY <- forecast(forecastHybrid::hybridModel(y_training, models= "aezf"), h = 8)
x <- farHY()
acc_fin <- accuracy(x, y_test)
arr_all_hyb[count,1] <- acc_fin[5]
count <- count + 1
message("one finished")
}
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,2))
colnames(arr_all_hyb) <- c("hybrid_MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,2] <- M3[[nameId]]$type
#hybrid
fit <- forecastHybrid::hybridModel(y_training, models= "aezf")
farHY <- forecast(fit, h = 8)
x <- farHY()
acc_fin <- accuracy(x, y_test)
arr_all_hyb[count,1] <- acc_fin[5]
count <- count + 1
message("one finished")
}
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,2))
colnames(arr_all_hyb) <- c("hybrid_MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,2] <- M3[[nameId]]$type
#hybrid
fit <- forecastHybrid::hybridModel(y_training, models= "aezf")
farHY <- forecast(fit, h = 8)
x <- farHY()
acc_fin <- accuracy(x, y_test)
arr_all_hyb[count,1] <- acc_fin[5]
count <- count + 1
message("one finished")
}
knitr::opts_chunk$set(echo = TRUE)
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,2))
colnames(arr_all_hyb) <- c("hybrid_MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,2] <- M3[[nameId]]$type
#hybrid
fit <- forecastHybrid::hybridModel(y_training, models= "aezf")
farHY <- forecast(fit, h = 8)
x <- farHY
acc_fin <- accuracy(x, y_test)
arr_all_hyb[count,1] <- acc_fin[5]
count <- count + 1
message("one finished")
}
arr_all_hyb %>% as_tibble %>% write_xlsx("C:\\Users\\elias\\Desktop\\tabsxddd.xlsx")
plot(pressure)
acc_fin
library(forecastHybrid)
library(Mcomp)
library(forecast)
library(dplyr)
library(tsibble)
library(ggplot2)
library(ggthemes)
library(stringr)
library(MAPA)
arr_ids <- array(NA,c(70,1))
count = 1
for (ex in 1:length(M3)){     #figure our correct indexes     DATA Batch
if ((M3[[ex]]$period == "QUARTERLY") & (ex >= 701) & (ex <= 1400) & (ex %% 10 == 2)) {
arr_ids[count,1] <- ex
count = count + 1
#main functionality
}
}
arr_all_hyb <- array(NA,c(70,2))
colnames(arr_all_hyb) <- c("hybrid_MAPE","type")
count = 1
for (nameId in arr_ids) {
#MAIN
h = 8
y_training <- M3[[nameId]]$x
y_test <- M3[[nameId]]$xx
#BODY
arr_all_hyb[count,2] <- M3[[nameId]]$type
#hybrid
fit <- forecastHybrid::hybridModel(y_training, models= "aezf")
farHY <- forecast(fit, h = 8)
x <- farHY
acc_fin <- accuracy(x, y_test)
arr_all_hyb[count,1] <- acc_fin[2,5]
count <- count + 1
message("one finished")
}
arr_all_hyb %>% as_tibble %>% write_xlsx("C:\\Users\\elias\\Desktop\\tabsxddd.xlsx")
arr_all_hyb
